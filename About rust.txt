Rust Language Start-up:

Step 1: we need to download rustup in your computer

	url: "https://www.rust-lang.org/tools/install";

Step 2: Open Command Prompt and type "rustup" then click on the "Enter" button.

	rust ready to initiate.. Wait some time for rust initiate.

Rust by Example (RBE)

	Hello World - Start with a traditional Hello World program.

	Primitives - Learn about signed integers, unsigned integers and other primitives.

	Custom Types - struct and enum.

	Variable Bindings - mutable bindings, scope, shadowing.

	Types - Learn about changing and defining types.

	Conversion

	Expressions

	Flow of Control - if/else, for, and others.

	Functions - Learn about Methods, Closures and High Order Functions.

	Modules - Organize code using modules

	Crates - A crate is a compilation unit in Rust. Learn to create a library.

	Cargo - Go through some basic features of the official Rust package management tool.

	Attributes - An attribute is metadata applied to some module, crate or item.

	Generics - Learn about writing a function or data type which can work for multiple types of arguments.

	Scoping rules - Scopes play an important part in ownership, borrowing, and lifetimes.

	Traits - A trait is a collection of methods defined for an unknown type: Self

	Macros

	Error handling - Learn Rust way of handling failures.

	Std library types - Learn about some custom types provided by std library.

	Std misc - More custom types for file handling, threads.

	Testing - All sorts of testing in Rust.

	Unsafe Operations

	Compatibility

	Meta - Documentation, Benchmarking.
	
	
	
<Create a project>		cargo new project

<Compile the project>	rustc filename.rs

<Run the project>		cargo run



***  Example: HelloWorld program	 ***
		
		
		// This code is editable, feel free to hack it!
		// You can always return to the original code by clicking the "Reset" button ->

		// This is the main function
		fn main() 
		{
			// Statements here are executed when the compiled binary is called

			// Print text to the console
			println!("Hello World!");
		}